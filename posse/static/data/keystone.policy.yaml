keystone: !!python/object/apply:itertools.chain
  state: !!python/tuple
  - !!python/object/apply:builtins.iter
    args:
    - !!python/tuple
      - - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RoleCheck
              kind: role
              match: admin
            - !!python/object:oslo_policy._checks.GenericCheck
              kind: is_admin
              match: '1'
          check_str: role:admin or is_admin:1
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: admin_required
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.RoleCheck
            kind: role
            match: service
          check_str: role:service
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: service_role
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: service_role
          check_str: rule:admin_required or rule:service_role
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: service_or_admin
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.GenericCheck
            kind: user_id
            match: '%(user_id)s'
          check_str: user_id:%(user_id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: owner
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: owner
          check_str: rule:admin_required or rule:owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: admin_or_owner
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.GenericCheck
            kind: user_id
            match: '%(target.token.user_id)s'
          check_str: user_id:%(target.token.user_id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: token_subject
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: token_subject
          check_str: rule:admin_required or rule:token_subject
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: admin_or_token_subject
          scope_types: null
        - !!python/object:oslo_policy.policy.RuleDefault
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: service_or_admin
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: token_subject
          check_str: rule:service_or_admin or rule:token_subject
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          description: null
          name: service_admin_or_token_subject
          scope_types: null
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show application credential details.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/application_credentials/{application_credential_id}
          - method: HEAD
            path: /v3/users/{user_id}/application_credentials/{application_credential_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_application_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List application credentials for a user.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/application_credentials
          - method: HEAD
            path: /v3/users/{user_id}/application_credentials
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_application_credentials
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create an application credential.
          _operations:
          - method: POST
            path: /v3/users/{user_id}/application_credentials
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_application_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete an application credential.
          _operations:
          - method: DELETE
            path: /v3/users/{user_id}/application_credentials/{application_credential_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_application_credential
          scope_types: null
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Authorize OAUTH1 request token.
          _operations:
          - method: PUT
            path: /v3/OS-OAUTH1/authorize/{request_token_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:authorize_request_token
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get OAUTH1 access token for user by access token ID.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_access_token
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get role for user OAUTH1 access token.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_access_token_role
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List OAUTH1 access tokens for user.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/OS-OAUTH1/access_tokens
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_access_tokens
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List OAUTH1 access token roles.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_access_token_roles
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete OAUTH1 access token.
          _operations:
          - method: DELETE
            path: /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_access_token
          scope_types:
          - project
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get service catalog.
          _operations:
          - method: GET
            path: /v3/auth/catalog
          - method: HEAD
            path: /v3/auth/catalog
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_auth_catalog
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all projects a user has access to via role assignments.
          _operations:
          - method: GET
            path: /v3/auth/projects
          - method: HEAD
            path: /v3/auth/projects
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_auth_projects
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all domains a user has access to via role assignments.
          _operations:
          - method: GET
            path: /v3/auth/domains
          - method: HEAD
            path: /v3/auth/domains
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_auth_domains
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List systems a user has access to via role assignments.
          _operations:
          - method: GET
            path: /v3/auth/system
          - method: HEAD
            path: /v3/auth/system
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_auth_system
          scope_types: null
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show OAUTH1 consumer details.
          _operations:
          - method: GET
            path: /v3/OS-OAUTH1/consumers/{consumer_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_consumer
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List OAUTH1 consumers.
          _operations:
          - method: GET
            path: /v3/OS-OAUTH1/consumers
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_consumers
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create OAUTH1 consumer.
          _operations:
          - method: POST
            path: /v3/OS-OAUTH1/consumers
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_consumer
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update OAUTH1 consumer.
          _operations:
          - method: PATCH
            path: /v3/OS-OAUTH1/consumers/{consumer_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_consumer
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete OAUTH1 consumer.
          _operations:
          - method: DELETE
            path: /v3/OS-OAUTH1/consumers/{consumer_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_consumer
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show credentials details.
          _operations:
          - method: GET
            path: /v3/credentials/{credential_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List credentials.
          _operations:
          - method: GET
            path: /v3/credentials
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_credentials
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create credential.
          _operations:
          - method: POST
            path: /v3/credentials
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update credential.
          _operations:
          - method: PATCH
            path: /v3/credentials/{credential_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete credential.
          _operations:
          - method: DELETE
            path: /v3/credentials/{credential_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_credential
          scope_types: null
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show domain details.
          _operations:
          - method: GET
            path: /v3/domains/{domain_id}
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.GenericCheck
              kind: token.project.domain.id
              match: '%(target.domain.id)s'
          check_str: rule:admin_required or token.project.domain.id:%(target.domain.id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_domain
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List domains.
          _operations:
          - method: GET
            path: /v3/domains
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_domains
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create domain.
          _operations:
          - method: POST
            path: /v3/domains
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_domain
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update domain.
          _operations:
          - method: PATCH
            path: /v3/domains/{domain_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_domain
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete domain.
          _operations:
          - method: DELETE
            path: /v3/domains/{domain_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_domain
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create domain configuration.
          _operations:
          - method: PUT
            path: /v3/domains/{domain_id}/config
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_domain_config
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get the entire domain configuration for a domain, an option
            group within a domain, or a specific configuration option within a group
            for a domain.
          _operations:
          - method: GET
            path: /v3/domains/{domain_id}/config
          - method: HEAD
            path: /v3/domains/{domain_id}/config
          - method: GET
            path: /v3/domains/{domain_id}/config/{group}
          - method: HEAD
            path: /v3/domains/{domain_id}/config/{group}
          - method: GET
            path: /v3/domains/{domain_id}/config/{group}/{option}
          - method: HEAD
            path: /v3/domains/{domain_id}/config/{group}/{option}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_domain_config
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get security compliance domain configuration for either a
            domain or a specific option in a domain.
          _operations:
          - method: GET
            path: /v3/domains/{domain_id}/config/security_compliance
          - method: HEAD
            path: /v3/domains/{domain_id}/config/security_compliance
          - method: GET
            path: v3/domains/{domain_id}/config/security_compliance/{option}
          - method: HEAD
            path: v3/domains/{domain_id}/config/security_compliance/{option}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_security_compliance_domain_config
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update domain configuration for either a domain, specific
            group or a specific option in a group.
          _operations:
          - method: PATCH
            path: /v3/domains/{domain_id}/config
          - method: PATCH
            path: /v3/domains/{domain_id}/config/{group}
          - method: PATCH
            path: /v3/domains/{domain_id}/config/{group}/{option}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_domain_config
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete domain configuration for either a domain, specific
            group or a specific option in a group.
          _operations:
          - method: DELETE
            path: /v3/domains/{domain_id}/config
          - method: DELETE
            path: /v3/domains/{domain_id}/config/{group}
          - method: DELETE
            path: /v3/domains/{domain_id}/config/{group}/{option}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_domain_config
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get domain configuration default for either a domain, specific
            group or a specific option in a group.
          _operations:
          - method: GET
            path: /v3/domains/config/default
          - method: HEAD
            path: /v3/domains/config/default
          - method: GET
            path: /v3/domains/config/{group}/default
          - method: HEAD
            path: /v3/domains/config/{group}/default
          - method: GET
            path: /v3/domains/config/{group}/{option}/default
          - method: HEAD
            path: /v3/domains/config/{group}/{option}/default
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_domain_config_default
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show ec2 credential details.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/credentials/OS-EC2/{credential_id}
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.AndCheck
              rules:
              - !!python/object:oslo_policy._checks.RuleCheck
                kind: rule
                match: owner
              - !!python/object:oslo_policy._checks.GenericCheck
                kind: user_id
                match: '%(target.credential.user_id)s'
          check_str: rule:admin_required or (rule:owner and user_id:%(target.credential.user_id)s)
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:ec2_get_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List ec2 credentials.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/credentials/OS-EC2
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:ec2_list_credentials
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create ec2 credential.
          _operations:
          - method: POST
            path: /v3/users/{user_id}/credentials/OS-EC2
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:ec2_create_credential
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete ec2 credential.
          _operations:
          - method: DELETE
            path: /v3/users/{user_id}/credentials/OS-EC2/{credential_id}
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.AndCheck
              rules:
              - !!python/object:oslo_policy._checks.RuleCheck
                kind: rule
                match: owner
              - !!python/object:oslo_policy._checks.GenericCheck
                kind: user_id
                match: '%(target.credential.user_id)s'
          check_str: rule:admin_required or (rule:owner and user_id:%(target.credential.user_id)s)
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:ec2_delete_credential
          scope_types: null
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show endpoint details.
          _operations:
          - method: GET
            path: /v3/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List endpoints.
          _operations:
          - method: GET
            path: /v3/endpoints
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_endpoints
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create endpoint.
          _operations:
          - method: POST
            path: /v3/endpoints
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update endpoint.
          _operations:
          - method: PATCH
            path: /v3/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete endpoint.
          _operations:
          - method: DELETE
            path: /v3/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_endpoint
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create endpoint group.
          _operations:
          - method: POST
            path: /v3/OS-EP-FILTER/endpoint_groups
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_endpoint_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List endpoint groups.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/endpoint_groups
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_endpoint_groups
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get endpoint group.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
          - method: HEAD
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_endpoint_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update endpoint group.
          _operations:
          - method: PATCH
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_endpoint_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete endpoint group.
          _operations:
          - method: DELETE
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_endpoint_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all projects associated with a specific endpoint group.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_projects_associated_with_endpoint_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all endpoints associated with an endpoint group.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_endpoints_associated_with_endpoint_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check if an endpoint group is associated with a project.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
          - method: HEAD
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_endpoint_group_in_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List endpoint groups associated with a specific project.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_endpoint_groups_for_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Allow a project to access an endpoint group.
          _operations:
          - method: PUT
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:add_endpoint_group_to_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Remove endpoint group from project.
          _operations:
          - method: DELETE
            path: /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:remove_endpoint_group_from_project
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check a role grant between a target and an actor. A target
            can be either a domain or a project. An actor can be either a user or
            a group. These terms also apply to the OS-INHERIT APIs, where grants on
            the target are inherited to all projects in the subtree, if applicable.
          _operations:
          - method: HEAD
            path: /v3/projects/{project_id}/users/{user_id}/roles/{role_id}
          - method: GET
            path: /v3/projects/{project_id}/users/{user_id}/roles/{role_id}
          - method: HEAD
            path: /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}
          - method: GET
            path: /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}
          - method: HEAD
            path: /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
          - method: GET
            path: /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
          - method: HEAD
            path: /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
          - method: GET
            path: /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
          - method: HEAD
            path: /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: GET
            path: /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: HEAD
            path: /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          - method: GET
            path: /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          - method: HEAD
            path: /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: GET
            path: /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: HEAD
            path: /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          - method: GET
            path: /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_grant
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List roles granted to an actor on a target. A target can be
            either a domain or a project. An actor can be either a user or a group.
            For the OS-INHERIT APIs, it is possible to list inherited role grants
            for actors on domains, where grants are inherited to all projects in the
            specified domain.
          _operations:
          - method: GET
            path: /v3/projects/{project_id}/users/{user_id}/roles
          - method: HEAD
            path: /v3/projects/{project_id}/users/{user_id}/roles
          - method: GET
            path: /v3/projects/{project_id}/groups/{group_id}/roles
          - method: HEAD
            path: /v3/projects/{project_id}/groups/{group_id}/roles
          - method: GET
            path: /v3/domains/{domain_id}/users/{user_id}/roles
          - method: HEAD
            path: /v3/domains/{domain_id}/users/{user_id}/roles
          - method: GET
            path: /v3/domains/{domain_id}/groups/{group_id}/roles
          - method: HEAD
            path: /v3/domains/{domain_id}/groups/{group_id}/roles
          - method: GET
            path: /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects
          - method: GET
            path: /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_grants
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create a role grant between a target and an actor. A target
            can be either a domain or a project. An actor can be either a user or
            a group. These terms also apply to the OS-INHERIT APIs, where grants on
            the target are inherited to all projects in the subtree, if applicable.
          _operations:
          - method: PUT
            path: /v3/projects/{project_id}/users/{user_id}/roles/{role_id}
          - method: PUT
            path: /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}
          - method: PUT
            path: /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
          - method: PUT
            path: /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
          - method: PUT
            path: /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: PUT
            path: /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          - method: PUT
            path: /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: PUT
            path: /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_grant
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Revoke a role grant between a target and an actor. A target
            can be either a domain or a project. An actor can be either a user or
            a group. These terms also apply to the OS-INHERIT APIs, where grants on
            the target are inherited to all projects in the subtree, if applicable.
            In that case, revoking the role grant in the target would remove the logical
            effect of inheriting it to the target's projects subtree.
          _operations:
          - method: DELETE
            path: /v3/projects/{project_id}/users/{user_id}/roles/{role_id}
          - method: DELETE
            path: /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}
          - method: DELETE
            path: /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
          - method: DELETE
            path: /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
          - method: DELETE
            path: /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: DELETE
            path: /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          - method: DELETE
            path: /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects
          - method: DELETE
            path: /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:revoke_grant
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all grants a specific user has on the system.
          _operations:
          - method:
            - HEAD
            - GET
            path: /v3/system/users/{user_id}/roles
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_system_grants_for_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check if a user has a role on the system.
          _operations:
          - method:
            - HEAD
            - GET
            path: /v3/system/users/{user_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_system_grant_for_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Grant a user a role on the system.
          _operations:
          - method:
            - PUT
            path: /v3/system/users/{user_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_system_grant_for_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Remove a role from a user on the system.
          _operations:
          - method:
            - DELETE
            path: /v3/system/users/{user_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:revoke_system_grant_for_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all grants a specific group has on the system.
          _operations:
          - method:
            - HEAD
            - GET
            path: /v3/system/groups/{group_id}/roles
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_system_grants_for_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check if a group has a role on the system.
          _operations:
          - method:
            - HEAD
            - GET
            path: /v3/system/groups/{group_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_system_grant_for_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Grant a group a role on the system.
          _operations:
          - method:
            - PUT
            path: /v3/system/groups/{group_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_system_grant_for_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Remove a role from a group on the system.
          _operations:
          - method:
            - DELETE
            path: /v3/system/groups/{group_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:revoke_system_grant_for_group
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show group details.
          _operations:
          - method: GET
            path: /v3/groups/{group_id}
          - method: HEAD
            path: /v3/groups/{group_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List groups.
          _operations:
          - method: GET
            path: /v3/groups
          - method: HEAD
            path: /v3/groups
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_groups
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List groups to which a user belongs.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/groups
          - method: HEAD
            path: /v3/users/{user_id}/groups
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_groups_for_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create group.
          _operations:
          - method: POST
            path: /v3/groups
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update group.
          _operations:
          - method: PATCH
            path: /v3/groups/{group_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete group.
          _operations:
          - method: DELETE
            path: /v3/groups/{group_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List members of a specific group.
          _operations:
          - method: GET
            path: /v3/groups/{group_id}/users
          - method: HEAD
            path: /v3/groups/{group_id}/users
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_users_in_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Remove user from group.
          _operations:
          - method: DELETE
            path: /v3/groups/{group_id}/users/{user_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:remove_user_from_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check whether a user is a member of a group.
          _operations:
          - method: HEAD
            path: /v3/groups/{group_id}/users/{user_id}
          - method: GET
            path: /v3/groups/{group_id}/users/{user_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_user_in_group
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Add user to group.
          _operations:
          - method: PUT
            path: /v3/groups/{group_id}/users/{user_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:add_user_to_group
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create identity provider.
          _operations:
          - method: PUT
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_identity_provider
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List identity providers.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/identity_providers
          - method: HEAD
            path: /v3/OS-FEDERATION/identity_providers
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_identity_providers
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get identity provider.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}
          - method: HEAD
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_identity_provider
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update identity provider.
          _operations:
          - method: PATCH
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_identity_provider
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete identity provider.
          _operations:
          - method: DELETE
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_identity_provider
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get information about an association between two roles. When
            a relationship exists between a prior role and an implied role and the
            prior role is assigned to a user, the user also assumes the implied role.
          _operations:
          - method: GET
            path: /v3/roles/{prior_role_id}/implies/{implied_role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_implied_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List associations between two roles. When a relationship exists
            between a prior role and an implied role and the prior role is assigned
            to a user, the user also assumes the implied role. This will return all
            the implied roles that would be assumed by the user who gets the specified
            prior role.
          _operations:
          - method: GET
            path: /v3/roles/{prior_role_id}/implies
          - method: HEAD
            path: /v3/roles/{prior_role_id}/implies
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_implied_roles
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create an association between two roles. When a relationship
            exists between a prior role and an implied role and the prior role is
            assigned to a user, the user also assumes the implied role.
          _operations:
          - method: PUT
            path: /v3/roles/{prior_role_id}/implies/{implied_role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_implied_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete the association between two roles. When a relationship
            exists between a prior role and an implied role and the prior role is
            assigned to a user, the user also assumes the implied role. Removing the
            association will cause that effect to be eliminated.
          _operations:
          - method: DELETE
            path: /v3/roles/{prior_role_id}/implies/{implied_role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_implied_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all associations between two roles in the system. When
            a relationship exists between a prior role and an implied role and the
            prior role is assigned to a user, the user also assumes the implied role.
          _operations:
          - method: GET
            path: /v3/role_inferences
          - method: HEAD
            path: /v3/role_inferences
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_role_inference_rules
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check an association between two roles. When a relationship
            exists between a prior role and an implied role and the prior role is
            assigned to a user, the user also assumes the implied role.
          _operations:
          - method: HEAD
            path: /v3/roles/{prior_role_id}/implies/{implied_role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_implied_role
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show limit details.
          _operations:
          - method: GET
            path: /v3/limits/{limit_id}
          - method: HEAD
            path: /v3/limits/{limit_id}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_limit
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List limits.
          _operations:
          - method: GET
            path: /v3/limits
          - method: HEAD
            path: /v3/limits
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_limits
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create limits.
          _operations:
          - method: POST
            path: /v3/limits
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_limits
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update limits.
          _operations:
          - method: PUT
            path: /v3/limits/{limit_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_limits
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete limit.
          _operations:
          - method: DELETE
            path: /v3/limits/{limit_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_limit
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create a new federated mapping containing one or more sets
            of rules.
          _operations:
          - method: PUT
            path: /v3/OS-FEDERATION/mappings/{mapping_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_mapping
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get a federated mapping.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/mappings/{mapping_id}
          - method: HEAD
            path: /v3/OS-FEDERATION/mappings/{mapping_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_mapping
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List federated mappings.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/mappings
          - method: HEAD
            path: /v3/OS-FEDERATION/mappings
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_mappings
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete a federated mapping.
          _operations:
          - method: DELETE
            path: /v3/OS-FEDERATION/mappings/{mapping_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_mapping
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update a federated mapping.
          _operations:
          - method: PATCH
            path: /v3/OS-FEDERATION/mappings/{mapping_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_mapping
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show policy details.
          _operations:
          - method: GET
            path: /v3/policy/{policy_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_policy
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List policies.
          _operations:
          - method: GET
            path: /v3/policies
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_policies
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create policy.
          _operations:
          - method: POST
            path: /v3/policies
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_policy
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update policy.
          _operations:
          - method: PATCH
            path: /v3/policies/{policy_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_policy
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete policy.
          _operations:
          - method: DELETE
            path: /v3/policies/{policy_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_policy
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Associate a policy to a specific endpoint.
          _operations:
          - method: PUT
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_policy_association_for_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check policy association for endpoint.
          _operations:
          - method: GET
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
          - method: HEAD
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_policy_association_for_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete policy association for endpoint.
          _operations:
          - method: DELETE
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_policy_association_for_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Associate a policy to a specific service.
          _operations:
          - method: PUT
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_policy_association_for_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check policy association for service.
          _operations:
          - method: GET
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
          - method: HEAD
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_policy_association_for_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete policy association for service.
          _operations:
          - method: DELETE
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_policy_association_for_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Associate a policy to a specific region and service combination.
          _operations:
          - method: PUT
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_policy_association_for_region_and_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check policy association for region and service.
          _operations:
          - method: GET
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
          - method: HEAD
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_policy_association_for_region_and_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete policy association for region and service.
          _operations:
          - method: DELETE
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_policy_association_for_region_and_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get policy for endpoint.
          _operations:
          - method: GET
            path: /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
          - method: HEAD
            path: /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_policy_for_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List endpoints for policy.
          _operations:
          - method: GET
            path: /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_endpoints_for_policy
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show project details.
          _operations:
          - method: GET
            path: /v3/projects/{project_id}
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.GenericCheck
              kind: project_id
              match: '%(target.project.id)s'
          check_str: rule:admin_required or project_id:%(target.project.id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_project
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List projects.
          _operations:
          - method: GET
            path: /v3/projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_projects
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List projects for user.
          _operations:
          - method: GET
            path: /v3/users/{user_id}/projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_user_projects
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create project.
          _operations:
          - method: POST
            path: /v3/projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update project.
          _operations:
          - method: PATCH
            path: /v3/projects/{project_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete project.
          _operations:
          - method: DELETE
            path: /v3/projects/{project_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List tags for a project.
          _operations:
          - method: GET
            path: /v3/projects/{project_id}/tags
          - method: HEAD
            path: /v3/projects/{project_id}/tags
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.GenericCheck
              kind: project_id
              match: '%(target.project.id)s'
          check_str: rule:admin_required or project_id:%(target.project.id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_project_tags
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check if project contains a tag.
          _operations:
          - method: GET
            path: /v3/projects/{project_id}/tags/{value}
          - method: HEAD
            path: /v3/projects/{project_id}/tags/{value}
          check: !!python/object:oslo_policy._checks.OrCheck
            rules:
            - !!python/object:oslo_policy._checks.RuleCheck
              kind: rule
              match: admin_required
            - !!python/object:oslo_policy._checks.GenericCheck
              kind: project_id
              match: '%(target.project.id)s'
          check_str: rule:admin_required or project_id:%(target.project.id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_project_tag
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Replace all tags on a project with the new set of tags.
          _operations:
          - method: PUT
            path: /v3/projects/{project_id}/tags
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_project_tags
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Add a single tag to a project.
          _operations:
          - method: PUT
            path: /v3/projects/{project_id}/tags/{value}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_project_tag
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Remove all tags from a project.
          _operations:
          - method: DELETE
            path: /v3/projects/{project_id}/tags
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_project_tags
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete a specified tag from project.
          _operations:
          - method: DELETE
            path: /v3/projects/{project_id}/tags/{value}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_project_tag
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List projects allowed to access an endpoint.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_projects_for_endpoint
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Allow project to access an endpoint.
          _operations:
          - method: PUT
            path: /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:add_endpoint_to_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check if a project is allowed to access an endpoint.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
          - method: HEAD
            path: /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_endpoint_in_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List the endpoints a project is allowed to access.
          _operations:
          - method: GET
            path: /v3/OS-EP-FILTER/projects/{project_id}/endpoints
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_endpoints_for_project
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Remove access to an endpoint from a project that has previously
            been given explicit access.
          _operations:
          - method: DELETE
            path: /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:remove_endpoint_from_project
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create federated protocol.
          _operations:
          - method: PUT
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_protocol
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update federated protocol.
          _operations:
          - method: PATCH
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_protocol
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get federated protocol.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_protocol
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List federated protocols.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_protocols
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete federated protocol.
          _operations:
          - method: DELETE
            path: /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_protocol
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show region details.
          _operations:
          - method: GET
            path: /v3/regions/{region_id}
          - method: HEAD
            path: /v3/regions/{region_id}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_region
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List regions.
          _operations:
          - method: GET
            path: /v3/regions
          - method: HEAD
            path: /v3/regions
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_regions
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create region.
          _operations:
          - method: POST
            path: /v3/regions
          - method: PUT
            path: /v3/regions/{region_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_region
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update region.
          _operations:
          - method: PATCH
            path: /v3/regions/{region_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_region
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete region.
          _operations:
          - method: DELETE
            path: /v3/regions/{region_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_region
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show registered limit details.
          _operations:
          - method: GET
            path: /v3/registered_limits/{registered_limit_id}
          - method: HEAD
            path: /v3/registered_limits/{registered_limit_id}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_registered_limit
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List registered limits.
          _operations:
          - method: GET
            path: /v3/registered_limits
          - method: HEAD
            path: /v3/registered_limits
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_registered_limits
          scope_types:
          - system
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create registered limits.
          _operations:
          - method: POST
            path: /v3/registered_limits
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_registered_limits
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update registered limits.
          _operations:
          - method: PUT
            path: /v3/registered_limits/{registered_limit_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_registered_limits
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete registered limit.
          _operations:
          - method: DELETE
            path: /v3/registered_limits/{registered_limit_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_registered_limit
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List revocation events.
          _operations:
          - method: GET
            path: /v3/OS-REVOKE/events
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: service_or_admin
          check_str: rule:service_or_admin
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_revoke_events
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show role details.
          _operations:
          - method: GET
            path: /v3/roles/{role_id}
          - method: HEAD
            path: /v3/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List roles.
          _operations:
          - method: GET
            path: /v3/roles
          - method: HEAD
            path: /v3/roles
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_roles
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create role.
          _operations:
          - method: POST
            path: /v3/roles
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update role.
          _operations:
          - method: PATCH
            path: /v3/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete role.
          _operations:
          - method: DELETE
            path: /v3/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show domain role.
          _operations:
          - method: GET
            path: /v3/roles/{role_id}
          - method: HEAD
            path: /v3/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_domain_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List domain roles.
          _operations:
          - method: GET
            path: /v3/roles?domain_id={domain_id}
          - method: HEAD
            path: /v3/roles?domain_id={domain_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_domain_roles
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create domain role.
          _operations:
          - method: POST
            path: /v3/roles
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_domain_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update domain role.
          _operations:
          - method: PATCH
            path: /v3/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_domain_role
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete domain role.
          _operations:
          - method: DELETE
            path: /v3/roles/{role_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_domain_role
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List role assignments.
          _operations:
          - method: GET
            path: /v3/role_assignments
          - method: HEAD
            path: /v3/role_assignments
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_role_assignments
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all role assignments for a given tree of hierarchical
            projects.
          _operations:
          - method: GET
            path: /v3/role_assignments?include_subtree
          - method: HEAD
            path: /v3/role_assignments?include_subtree
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_role_assignments_for_tree
          scope_types:
          - project
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show service details.
          _operations:
          - method: GET
            path: /v3/services/{service_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List services.
          _operations:
          - method: GET
            path: /v3/services
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_services
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create service.
          _operations:
          - method: POST
            path: /v3/services
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update service.
          _operations:
          - method: PATCH
            path: /v3/services/{service_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_service
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete service.
          _operations:
          - method: DELETE
            path: /v3/services/{service_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_service
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create federated service provider.
          _operations:
          - method: PUT
            path: /v3/OS-FEDERATION/service_providers/{service_provider_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_service_provider
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List federated service providers.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/service_providers
          - method: HEAD
            path: /v3/OS-FEDERATION/service_providers
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_service_providers
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get federated service provider.
          _operations:
          - method: GET
            path: /v3/OS-FEDERATION/service_providers/{service_provider_id}
          - method: HEAD
            path: /v3/OS-FEDERATION/service_providers/{service_provider_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_service_provider
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update federated service provider.
          _operations:
          - method: PATCH
            path: /v3/OS-FEDERATION/service_providers/{service_provider_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_service_provider
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete federated service provider.
          _operations:
          - method: DELETE
            path: /v3/OS-FEDERATION/service_providers/{service_provider_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_service_provider
          scope_types:
          - system
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List revoked PKI tokens.
          _operations:
          - method: GET
            path: /v3/auth/tokens/OS-PKI/revoked
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: service_or_admin
          check_str: rule:service_or_admin
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:revocation_list
          scope_types:
          - system
          - project
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check a token.
          _operations:
          - method: HEAD
            path: /v3/auth/tokens
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_token_subject
          check_str: rule:admin_or_token_subject
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:check_token
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Validate a token.
          _operations:
          - method: GET
            path: /v3/auth/tokens
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: service_admin_or_token_subject
          check_str: rule:service_admin_or_token_subject
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:validate_token
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Revoke a token.
          _operations:
          - method: DELETE
            path: /v3/auth/tokens
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_token_subject
          check_str: rule:admin_or_token_subject
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:revoke_token
          scope_types: null
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create trust.
          _operations:
          - method: POST
            path: /v3/OS-TRUST/trusts
          check: !!python/object:oslo_policy._checks.GenericCheck
            kind: user_id
            match: '%(trust.trustor_user_id)s'
          check_str: user_id:%(trust.trustor_user_id)s
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_trust
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List trusts.
          _operations:
          - method: GET
            path: /v3/OS-TRUST/trusts
          - method: HEAD
            path: /v3/OS-TRUST/trusts
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_trusts
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List roles delegated by a trust.
          _operations:
          - method: GET
            path: /v3/OS-TRUST/trusts/{trust_id}/roles
          - method: HEAD
            path: /v3/OS-TRUST/trusts/{trust_id}/roles
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_roles_for_trust
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Check if trust delegates a particular role.
          _operations:
          - method: GET
            path: /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id}
          - method: HEAD
            path: /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_role_for_trust
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Revoke trust.
          _operations:
          - method: DELETE
            path: /v3/OS-TRUST/trusts/{trust_id}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_trust
          scope_types:
          - project
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Get trust.
          _operations:
          - method: GET
            path: /v3/OS-TRUST/trusts/{trust_id}
          - method: HEAD
            path: /v3/OS-TRUST/trusts/{trust_id}
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_trust
          scope_types:
          - project
      - - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Show user details.
          _operations:
          - method: GET
            path: /v3/users/{user_id}
          - method: HEAD
            path: /v3/users/{user_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_or_owner
          check_str: rule:admin_or_owner
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:get_user
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List users.
          _operations:
          - method: GET
            path: /v3/users
          - method: HEAD
            path: /v3/users
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_users
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all projects a user has access to via role assignments.
          _operations:
          - method: GET
            path: ' /v3/auth/projects'
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_projects_for_user
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: List all domains a user has access to via role assignments.
          _operations:
          - method: GET
            path: /v3/auth/domains
          check: !!python/object:oslo_policy._checks.TrueCheck {}
          check_str: ''
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:list_domains_for_user
          scope_types: null
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Create a user.
          _operations:
          - method: POST
            path: /v3/users
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:create_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Update a user, including administrative password resets.
          _operations:
          - method: PATCH
            path: /v3/users/{user_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:update_user
          scope_types:
          - system
        - !!python/object:oslo_policy.policy.DocumentedRuleDefault
          _description: Delete a user.
          _operations:
          - method: DELETE
            path: /v3/users/{user_id}
          check: !!python/object:oslo_policy._checks.RuleCheck
            kind: rule
            match: admin_required
          check_str: rule:admin_required
          deprecated_for_removal: false
          deprecated_reason: null
          deprecated_rule: []
          deprecated_since: null
          name: identity:delete_user
          scope_types:
          - system
    state: 0
